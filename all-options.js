const puppeteer = require('puppeteer');
const { URLSearchParams } = require('url');

(async () => {
    try {
        const params = new URLSearchParams({
            // API key (Org Management => API Keys)
            key: process.env.TESTABLE_KEY,
            // Gets logged with the test indicating which user ran this test, defaults to 'remote'
            user: 'demo',
            // browser name: chrome, edge, firefox, openfin 
            browserName: 'chrome',
            // browser version (e.g. latest, latest-1, 90)
            browserVersion: 'latest-1',
            // size of the display (WxH)
            screenResolution: '1920x1080',
            // test case name is a high level grouping for related tests (e.g. project name)
            testCaseName: 'Project Top Secret',
            // a label for what this script is testing
            scenarioName: 'Basic regression test',
            // a label for the particular browser/device/screen size combo
            name: 'Chrome on a Desktop (1920 x 1080)',
            // whether or not to record a video of the session
            recordVideo: true,
            // whether or not to capture network request performance metrics, enabled by default
            capturePerformance: true,
            // whether or not to capture request/response bodies for network requests, disabled by default
            // and only relevant if capturePerformance is true
            captureBody: false,
            // whether or not to capture any messages the page writes to the browser console, enabled by default
            captureConsoleLog: true,
            // whether or not to log all commands sent at the CDP protocol level, disabled by default
            logCommands: true,
            // whether or not to log all events generated by the CDP protocol, disabled by default
            logEvents: false,
            // choose from list of preconfigured devices Testable provides (see Remote Test Configurator screen for full list)
            // ignored if device option is set like below but provided here for completeness
            deviceName: 'iPhone 12 Pro Max (428 x 926)',
            // custom device to emulate
            device: JSON.stringify({
                "name":"My Custom Mobile Device",
                "displaySize":"400x1000x24",
                "userAgent":"Custom Agent",
                "type":"device",
                "width":400,
                "height":1000,
                "scaleFactor":3,
                "isMobile":true,
                "isTouch":true,
                "isLandscape":false
            }),
            // a special tag for grouping together related test runs, 
            // typically running the same script against different browser versions and devices
            reportId: 'Report 123',
            // tags to associate with this test run; tags can be used to search for tests later
            tags: 'Server-1.2.0,Env-QA'
        }).toString();
        const browser = await puppeteer.connect({
            timeout: 0,
            browserWSEndpoint: `ws://ec2-3-16-162-61.us-east-2.compute.amazonaws.com:8080/cdp?${params}`
        });
        const page = await browser.newPage();
        await page.setViewport({ width: 400, height: 1000 });

        await page.goto('https://iowa.rivals.com');
        await page.waitForTimeout(1000);

        await page.screenshot({ path: 'test.png' });
        await browser.close();
    } catch (err) {
        console.log(err);
    }
})();
